



CREATE COMPUTE MODULE upd_TERRANOVAH2O
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE nrecTotTRN INTEGER CAST (Environment.Variables.count AS INTEGER);
		DECLARE i INTEGER 1;
		DECLARE id INTEGER;
		DECLARE dataacq CHARACTER;
		DECLARE erdat CHARACTER;

		SET dataacq = Environment.Variables.dataacq; --fissati nel primo nodo compute
		SET erdat = Environment.Variables.erdat;
		-- PASSTHRU ('SET IMPLICIT_TRANSACTIONS ON');--per NOn autocommit, ma non basta...
		--questo update è stato isolato e portato in fondo perché il db ha l'AUTOCMMIT, e quindi se messo prima farebbe l'update a P
		--ANCHE in caso di errori successivi del flusso...
		WHILE i <= nrecTotTRN DO

			SET id = CAST(Environment.result[i].id AS INTEGER);
			IF Environment.result[i].DA_AGGIORNARE = 'SI' THEN
				UPDATE Database.SAPR3_ZINDH20 AS t
				SET DATAACQ = dataacq, --SUBSTRING(dataacq CAST(CURRENT_timestamp AS CHARACTER FORMAT 'yyyyMMddHHmm'), -- su DB Terranova e' varchars(8)
				STATO_PROCESSO ='P',
				DATASAP= erdat --CAST(CURRENT_DATE AS CHARACTER FORMAT 'yyyyMMdd')
				WHERE t.ID = id;
			END IF;

			SET i=i+1;

		END WHILE;

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;